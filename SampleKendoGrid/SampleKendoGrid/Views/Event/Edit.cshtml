@model SampleKendoGrid.Models.ModelClass

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>
@using Kendo.Mvc.UI
<h2>Editing</h2>
<head>
    <base href="https://demos.telerik.com/kendo-ui/datasource/index">
    <style>
        html {
            font-size: 14px;
            font-family: Arial, Helvetica, sans-serif;
        }
    </style>
    <title></title>
    <script src="https://kendo.cdn.telerik.com/2019.1.220/js/jquery.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2019.1.220/js/kendo.all.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2019.1.220/js/kendo.web.min.js"></script>
    <script src=" https://kendo.cdn.telerik.com/2019.1.220/js/kendo.aspnetmvc.min.js"></script>
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2019.1.220/styles/kendo.common-material.min.css" />
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2019.1.220/styles/kendo.material.min.css" />
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2019.1.220/styles/kendo.material.mobile.min.css" />


</head>
@(Html.Kendo().Grid<SampleKendoGrid.Models.ModelClass>
            ()
            .Name("Grid")
            .Columns(columns =>
            {
                columns.Bound(p => p.Id);
                columns.Bound(p => p.Name);
                columns.Bound(p => p.City);

                columns.Command(command => command.Destroy()).Width(150);
            })
            .ToolBar(toolbar =>
            {
                toolbar.Create();
                toolbar.Save();
            })
            .Pageable()
            .Sortable()
            .Filterable()
            .Groupable()
            .Scrollable()
            .Selectable(selectable => selectable
                .Mode(GridSelectionMode.Multiple)
                .Type(GridSelectionType.Cell))
                 .Events(events =>
                    {
                       events.Change("onRowSelected");
                       events.DataBound(@<text>function(e) {alert(Data Bound)}</text>);
                       events.DataBinding(@<text>function(e) {alert(Data Bind)}</text>);
                        })

                         //.Events(events => events
                         //    .Change("onChange")
                         //    .DataBound("onDataBound")
                         //    .DataBinding("onDataBinding")
                     //.Sort("onSorting")
                     //.Filter("onFiltering")
                     //.Group("onGrouping")
                     //.Page("onPaging")
                     //.GroupCollapse("onGroupCollapse")
                     //.GroupExpand("onGroupExpand")
                     )

                             .DataSource(dataSource => dataSource
                                 .Ajax()
                                 .Read(read => read.Action("Read", "Event"))
                              )
)
<div class="box wide">
    <h4>Console log</h4>
    <div class="console"></div>
</div>

<script type="text/javascript">

    function onChange(arg) {
        var selected = $.map(this.select(), function (item) {
            return $(item).text();
        });

        kendoConsole.log("Selected: " + selected.length + " item(s), [" + selected.join(", ") + "]");
    }

    function onDataBound(arg) {
        kendoConsole.log("Grid data bound");
    }

    function onDataBinding(arg) {
        kendoConsole.log("Grid data binding");
    }


</script>
<style>
    div.console div {
        height: auto;
    }
</style>
